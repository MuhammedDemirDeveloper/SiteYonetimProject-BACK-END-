// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SiteYonetimData_Access.Data;


#nullable disable

namespace SiteYonetimData_Access.Migrations
{
    [DbContext(typeof(SiteYonetimDbContext))]
    [Migration("20220808172756_EkleTumTablolarSiteYonetim")]
    partial class EkleTumTablolarSiteYonetim
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("SiteYonetimModel.Models.Bloklar", b =>
                {
                    b.Property<int>("BlokID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BlokID"), 1L, 1);

                    b.Property<int>("BlokDaireSayisi")
                        .HasColumnType("int");

                    b.Property<string>("BlokTanim")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("FirmaID")
                        .HasColumnType("int")
                        .HasColumnOrder(0);

                    b.Property<int?>("SiteID")
                        .HasColumnType("int")
                        .HasColumnOrder(1);

                    b.HasKey("BlokID");

                    b.HasIndex("FirmaID");

                    b.HasIndex("SiteID");

                    b.ToTable("tb_Bloklar");
                });

            modelBuilder.Entity("SiteYonetimModel.Models.Cinsiyetler", b =>
                {
                    b.Property<int>("CinsiyetID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CinsiyetID"), 1L, 1);

                    b.Property<string>("Cinsiyet")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CinsiyetID");

                    b.ToTable("tb_Cinsiyetler");
                });

            modelBuilder.Entity("SiteYonetimModel.Models.Daireler", b =>
                {
                    b.Property<int>("DaireID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DaireID"), 1L, 1);

                    b.Property<int?>("BlokID")
                        .HasColumnType("int");

                    b.Property<int>("DaireOdaSayisi")
                        .HasColumnType("int");

                    b.Property<string>("DaireTanim")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DaireID");

                    b.HasIndex("BlokID");

                    b.ToTable("tb_Daireler");
                });

            modelBuilder.Entity("SiteYonetimModel.Models.Firmalar", b =>
                {
                    b.Property<int>("FirmaID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FirmaID"), 1L, 1);

                    b.Property<string>("FirmaAdi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirmaAdres")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirmaEmail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FirmaKayitTarihi")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirmaSifre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("FirmaTelNo")
                        .HasMaxLength(10)
                        .HasColumnType("bigint");

                    b.Property<int?>("SozlesmeTarihiID")
                        .HasColumnType("int")
                        .HasColumnOrder(3);

                    b.Property<int?>("UlkeID")
                        .HasColumnType("int")
                        .HasColumnOrder(2);

                    b.Property<int?>("ilID")
                        .HasColumnType("int")
                        .HasColumnOrder(0);

                    b.Property<int?>("ilceID")
                        .HasColumnType("int")
                        .HasColumnOrder(1);

                    b.HasKey("FirmaID");

                    b.HasIndex("SozlesmeTarihiID");

                    b.HasIndex("UlkeID");

                    b.HasIndex("ilID");

                    b.HasIndex("ilceID");

                    b.ToTable("tb_Firmalar");
                });

            modelBuilder.Entity("SiteYonetimModel.Models.IsinmaTurleri", b =>
                {
                    b.Property<int>("IsinmaID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IsinmaID"), 1L, 1);

                    b.Property<string>("IsinmaTuru")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IsinmaID");

                    b.ToTable("tb_IsinmaTurleri");
                });

            modelBuilder.Entity("SiteYonetimModel.Models.ilceler", b =>
                {
                    b.Property<int>("ilceID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ilceID"), 1L, 1);

                    b.Property<int?>("ilID")
                        .HasColumnType("int");

                    b.Property<string>("ilceAdi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ilceID");

                    b.HasIndex("ilID");

                    b.ToTable("tb_ilceler");
                });

            modelBuilder.Entity("SiteYonetimModel.Models.iletisimDilleri", b =>
                {
                    b.Property<int>("IletisimDiliID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IletisimDiliID"), 1L, 1);

                    b.Property<string>("Dil")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IletisimDiliID");

                    b.ToTable("tb_iletisimDilleri");
                });

            modelBuilder.Entity("SiteYonetimModel.Models.iller", b =>
                {
                    b.Property<int>("ilID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ilID"), 1L, 1);

                    b.Property<int?>("UlkeID")
                        .HasColumnType("int");

                    b.Property<string>("ilAdi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ilID");

                    b.HasIndex("UlkeID");

                    b.ToTable("tb_iller");
                });

            modelBuilder.Entity("SiteYonetimModel.Models.Kisiler", b =>
                {
                    b.Property<int>("KisiID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("KisiID"), 1L, 1);

                    b.Property<string>("Adi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CinsiyetID")
                        .HasColumnType("int")
                        .HasColumnOrder(0);

                    b.Property<int?>("DaireID")
                        .HasColumnType("int")
                        .HasColumnOrder(3);

                    b.Property<string>("Durum")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("IletisimDiliID")
                        .HasColumnType("int")
                        .HasColumnOrder(4);

                    b.Property<int?>("MeslekID")
                        .HasColumnType("int")
                        .HasColumnOrder(1);

                    b.Property<int?>("OgrenimID")
                        .HasColumnType("int")
                        .HasColumnOrder(5);

                    b.Property<string>("Soyadi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("TcKimlikNo")
                        .HasMaxLength(11)
                        .HasColumnType("bigint");

                    b.Property<long>("TelNo1")
                        .HasMaxLength(10)
                        .HasColumnType("bigint");

                    b.Property<long>("TelNo2")
                        .HasMaxLength(10)
                        .HasColumnType("bigint");

                    b.Property<int?>("UyrukID")
                        .HasColumnType("int")
                        .HasColumnOrder(2);

                    b.HasKey("KisiID");

                    b.HasIndex("CinsiyetID");

                    b.HasIndex("DaireID");

                    b.HasIndex("IletisimDiliID");

                    b.HasIndex("MeslekID");

                    b.HasIndex("OgrenimID");

                    b.HasIndex("UyrukID");

                    b.ToTable("tb_Kisiler");
                });

            modelBuilder.Entity("SiteYonetimModel.Models.Meslekler", b =>
                {
                    b.Property<int>("MeslekID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MeslekID"), 1L, 1);

                    b.Property<string>("Meslek")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MeslekID");

                    b.ToTable("tb_Meslekler");
                });

            modelBuilder.Entity("SiteYonetimModel.Models.OgrenimDurumu", b =>
                {
                    b.Property<int>("OgrenimID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OgrenimID"), 1L, 1);

                    b.Property<string>("Ogrenim")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("OgrenimID");

                    b.ToTable("tb_OgrenimDurumu");
                });

            modelBuilder.Entity("SiteYonetimModel.Models.Personeller", b =>
                {
                    b.Property<int>("PersonelID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PersonelID"), 1L, 1);

                    b.Property<int?>("FirmaID")
                        .HasColumnType("int")
                        .HasColumnOrder(0);

                    b.Property<string>("PersonelAdi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PersonelDurum")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PersonelSoyadi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("PersonelTc")
                        .HasMaxLength(11)
                        .HasColumnType("bigint");

                    b.Property<int?>("SiteID")
                        .HasColumnType("int")
                        .HasColumnOrder(1);

                    b.HasKey("PersonelID");

                    b.HasIndex("FirmaID");

                    b.HasIndex("SiteID");

                    b.ToTable("tb_Personeller");
                });

            modelBuilder.Entity("SiteYonetimModel.Models.Siteler", b =>
                {
                    b.Property<int>("SiteID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SiteID"), 1L, 1);

                    b.Property<int>("FirmaID")
                        .HasColumnType("int")
                        .HasColumnOrder(0);

                    b.Property<int?>("IsinmaID")
                        .HasColumnType("int")
                        .HasColumnOrder(4);

                    b.Property<string>("SiteAdi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SiteAdres")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UlkeID")
                        .HasColumnType("int")
                        .HasColumnOrder(3);

                    b.Property<int?>("ilID")
                        .HasColumnType("int")
                        .HasColumnOrder(1);

                    b.Property<int?>("ilceID")
                        .HasColumnType("int")
                        .HasColumnOrder(2);

                    b.HasKey("SiteID");

                    b.HasIndex("FirmaID");

                    b.HasIndex("IsinmaID");

                    b.HasIndex("UlkeID");

                    b.HasIndex("ilID");

                    b.HasIndex("ilceID");

                    b.ToTable("tb_Siteler");
                });

            modelBuilder.Entity("SiteYonetimModel.Models.SozlesmeTarihleri", b =>
                {
                    b.Property<int>("SozlesmeTarihiID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SozlesmeTarihiID"), 1L, 1);

                    b.Property<DateTime>("Tarih")
                        .HasColumnType("datetime2");

                    b.HasKey("SozlesmeTarihiID");

                    b.ToTable("tb_SozlesmeTarihleri");
                });

            modelBuilder.Entity("SiteYonetimModel.Models.Ulkeler", b =>
                {
                    b.Property<int>("UlkeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UlkeID"), 1L, 1);

                    b.Property<string>("UlkeAdi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UlkeID");

                    b.ToTable("tb_Ulkeler");
                });

            modelBuilder.Entity("SiteYonetimModel.Models.Uyruklar", b =>
                {
                    b.Property<int>("UyrukID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UyrukID"), 1L, 1);

                    b.Property<string>("Uyruk")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UyrukID");

                    b.ToTable("tb_Uyruklar");
                });

            modelBuilder.Entity("SiteYonetimModel.Models.Bloklar", b =>
                {
                    b.HasOne("SiteYonetimModel.Models.Firmalar", "Firmalar")
                        .WithMany("Bloklar")
                        .HasForeignKey("FirmaID");

                    b.HasOne("SiteYonetimModel.Models.Siteler", "Siteler")
                        .WithMany("Bloklar")
                        .HasForeignKey("SiteID");

                    b.Navigation("Firmalar");

                    b.Navigation("Siteler");
                });

            modelBuilder.Entity("SiteYonetimModel.Models.Daireler", b =>
                {
                    b.HasOne("SiteYonetimModel.Models.Bloklar", "Bloklar")
                        .WithMany("Daireler")
                        .HasForeignKey("BlokID");

                    b.Navigation("Bloklar");
                });

            modelBuilder.Entity("SiteYonetimModel.Models.Firmalar", b =>
                {
                    b.HasOne("SiteYonetimModel.Models.SozlesmeTarihleri", "SozlesmeTarihleri")
                        .WithMany("Firmalar")
                        .HasForeignKey("SozlesmeTarihiID");

                    b.HasOne("SiteYonetimModel.Models.Ulkeler", "Ulkeler")
                        .WithMany("Firmalar")
                        .HasForeignKey("UlkeID");

                    b.HasOne("SiteYonetimModel.Models.iller", "iller")
                        .WithMany("Firmalar")
                        .HasForeignKey("ilID");

                    b.HasOne("SiteYonetimModel.Models.ilceler", "ilceler")
                        .WithMany("Firmalar")
                        .HasForeignKey("ilceID");

                    b.Navigation("SozlesmeTarihleri");

                    b.Navigation("Ulkeler");

                    b.Navigation("ilceler");

                    b.Navigation("iller");
                });

            modelBuilder.Entity("SiteYonetimModel.Models.ilceler", b =>
                {
                    b.HasOne("SiteYonetimModel.Models.iller", "iller")
                        .WithMany("ilceler")
                        .HasForeignKey("ilID");

                    b.Navigation("iller");
                });

            modelBuilder.Entity("SiteYonetimModel.Models.iller", b =>
                {
                    b.HasOne("SiteYonetimModel.Models.Ulkeler", "Ulkeler")
                        .WithMany("iller")
                        .HasForeignKey("UlkeID");

                    b.Navigation("Ulkeler");
                });

            modelBuilder.Entity("SiteYonetimModel.Models.Kisiler", b =>
                {
                    b.HasOne("SiteYonetimModel.Models.Cinsiyetler", "Cinsiyetler")
                        .WithMany("Kisiler")
                        .HasForeignKey("CinsiyetID");

                    b.HasOne("SiteYonetimModel.Models.Daireler", "Daireler")
                        .WithMany("Kisiler")
                        .HasForeignKey("DaireID");

                    b.HasOne("SiteYonetimModel.Models.iletisimDilleri", "iletisimDilleri")
                        .WithMany("Kisiler")
                        .HasForeignKey("IletisimDiliID");

                    b.HasOne("SiteYonetimModel.Models.Meslekler", "Meslekler")
                        .WithMany("Kisiler")
                        .HasForeignKey("MeslekID");

                    b.HasOne("SiteYonetimModel.Models.OgrenimDurumu", "OgrenimDurumu")
                        .WithMany("Kisiler")
                        .HasForeignKey("OgrenimID");

                    b.HasOne("SiteYonetimModel.Models.Uyruklar", "Uyruklar")
                        .WithMany("Kisiler")
                        .HasForeignKey("UyrukID");

                    b.Navigation("Cinsiyetler");

                    b.Navigation("Daireler");

                    b.Navigation("Meslekler");

                    b.Navigation("OgrenimDurumu");

                    b.Navigation("Uyruklar");

                    b.Navigation("iletisimDilleri");
                });

            modelBuilder.Entity("SiteYonetimModel.Models.Personeller", b =>
                {
                    b.HasOne("SiteYonetimModel.Models.Firmalar", "Firmalar")
                        .WithMany("Personeller")
                        .HasForeignKey("FirmaID");

                    b.HasOne("SiteYonetimModel.Models.Siteler", "Siteler")
                        .WithMany("Personeller")
                        .HasForeignKey("SiteID");

                    b.Navigation("Firmalar");

                    b.Navigation("Siteler");
                });

            modelBuilder.Entity("SiteYonetimModel.Models.Siteler", b =>
                {
                    b.HasOne("SiteYonetimModel.Models.Firmalar", "Firmalar")
                        .WithMany("Siteler")
                        .HasForeignKey("FirmaID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SiteYonetimModel.Models.IsinmaTurleri", "IsinmaTurleri")
                        .WithMany("Siteler")
                        .HasForeignKey("IsinmaID");

                    b.HasOne("SiteYonetimModel.Models.Ulkeler", "Ulkeler")
                        .WithMany("Siteler")
                        .HasForeignKey("UlkeID");

                    b.HasOne("SiteYonetimModel.Models.iller", "iller")
                        .WithMany("Siteler")
                        .HasForeignKey("ilID");

                    b.HasOne("SiteYonetimModel.Models.ilceler", "ilceler")
                        .WithMany("Siteler")
                        .HasForeignKey("ilceID");

                    b.Navigation("Firmalar");

                    b.Navigation("IsinmaTurleri");

                    b.Navigation("Ulkeler");

                    b.Navigation("ilceler");

                    b.Navigation("iller");
                });

            modelBuilder.Entity("SiteYonetimModel.Models.Bloklar", b =>
                {
                    b.Navigation("Daireler");
                });

            modelBuilder.Entity("SiteYonetimModel.Models.Cinsiyetler", b =>
                {
                    b.Navigation("Kisiler");
                });

            modelBuilder.Entity("SiteYonetimModel.Models.Daireler", b =>
                {
                    b.Navigation("Kisiler");
                });

            modelBuilder.Entity("SiteYonetimModel.Models.Firmalar", b =>
                {
                    b.Navigation("Bloklar");

                    b.Navigation("Personeller");

                    b.Navigation("Siteler");
                });

            modelBuilder.Entity("SiteYonetimModel.Models.IsinmaTurleri", b =>
                {
                    b.Navigation("Siteler");
                });

            modelBuilder.Entity("SiteYonetimModel.Models.ilceler", b =>
                {
                    b.Navigation("Firmalar");

                    b.Navigation("Siteler");
                });

            modelBuilder.Entity("SiteYonetimModel.Models.iletisimDilleri", b =>
                {
                    b.Navigation("Kisiler");
                });

            modelBuilder.Entity("SiteYonetimModel.Models.iller", b =>
                {
                    b.Navigation("Firmalar");

                    b.Navigation("Siteler");

                    b.Navigation("ilceler");
                });

            modelBuilder.Entity("SiteYonetimModel.Models.Meslekler", b =>
                {
                    b.Navigation("Kisiler");
                });

            modelBuilder.Entity("SiteYonetimModel.Models.OgrenimDurumu", b =>
                {
                    b.Navigation("Kisiler");
                });

            modelBuilder.Entity("SiteYonetimModel.Models.Siteler", b =>
                {
                    b.Navigation("Bloklar");

                    b.Navigation("Personeller");
                });

            modelBuilder.Entity("SiteYonetimModel.Models.SozlesmeTarihleri", b =>
                {
                    b.Navigation("Firmalar");
                });

            modelBuilder.Entity("SiteYonetimModel.Models.Ulkeler", b =>
                {
                    b.Navigation("Firmalar");

                    b.Navigation("Siteler");

                    b.Navigation("iller");
                });

            modelBuilder.Entity("SiteYonetimModel.Models.Uyruklar", b =>
                {
                    b.Navigation("Kisiler");
                });
#pragma warning restore 612, 618
        }
    }
}
